# .github/workflows/build-frontend.yml

name: Build and Push Frontend Docker Image # Workflow name

on:
  push:
    branches:
      - main # Triggers the workflow on pushes to the main branch
  workflow_dispatch: # Allows manual triggering from GitHub UI

jobs:
  build-and-push:
    runs-on: ubuntu-latest # Uses the latest Ubuntu runner

    steps:
    - name: Checkout repository # Step 1: Checks out the repository code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx # Step 2: Sets up Docker Buildx for multi-platform builds and advanced caching
      uses: docker/setup-buildx-action@v3
      with:
        # Enables GitHub Actions cache backend
        buildkitd-flags: --debug # Optional: for debugging Buildx caching issues

    - name: Log in to Docker Hub # Step 3: Logs in to Docker Hub using secrets
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }} # Docker Hub username from GitHub Secrets
        password: ${{ secrets.DOCKER_HUB_TOKEN }} # Docker Hub access token from GitHub Secrets

    - name: Build and push frontend image # Step 4: Builds and pushes the frontend image with caching
      uses: docker/build-push-action@v5
      with:
        context: ./saleor-storefront # Build context for the Dockerfile
        file: ./saleor-storefront/Dockerfile # Path to the Dockerfile
        push: true # Set to true to enable pushing the image
        tags: | # Defines the tags for the Docker image
          ${{ secrets.DOCKER_HUB_USERNAME }}/vitecover-frontend:latest # Pushes with the 'latest' tag
          ${{ secrets.DOCKER_HUB_USERNAME }}/vitecover-frontend:${{ github.sha }} # Pushes with a unique tag based on commit SHA
        build-args: | # Passes build arguments
          NEXT_PUBLIC_SALEOR_API_URL=http://localhost:8000/graphql/ # API URL used during build time
        cache-from: type=gha,scope=frontend-build-${{ github.ref_name }} # Pulls layers from GitHub Actions cache
        cache-to: type=gha,mode=max,scope=frontend-build-${{ github.ref_name }} # Pushes built layers to GitHub Actions cache, mode=max caches as many layers as possible
