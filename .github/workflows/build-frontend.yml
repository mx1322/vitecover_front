# .github/workflows/build-frontend.yml

name: Build Frontend Docker Image Only (Cached) # Workflow name updated to indicate build-only with caching

on:
  push:
    branches:
      - main # Triggers the workflow on pushes to the main branch

jobs:
  build-only:
    runs-on: ubuntu-latest # Uses the latest Ubuntu runner

    steps:
    - name: Checkout repository # Step 1: Checks out the repository code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx # Step 2: Sets up Docker Buildx for multi-platform builds and advanced caching
      uses: docker/setup-buildx-action@v3
      with:
        # Enables GitHub Actions cache backend
        buildkitd-flags: --debug # Optional: for debugging Buildx caching issues

    - name: Build frontend image with caching # Step 3: Builds the frontend image and utilizes caching
      uses: docker/build-push-action@v5
      with:
        context: ./saleor-storefront # Build context for the Dockerfile
        file: ./saleor-storefront/Dockerfile # Path to the Dockerfile
        push: false # Set to false to only build, not push
        build-args: | # Passes build arguments
          NEXT_PUBLIC_SALEOR_API_URL=http://localhost:8000/graphql/ # API URL used during build time
        cache-from: type=gha,scope=frontend-build-${{ github.ref_name }} # Pulls layers from GitHub Actions cache
        cache-to: type=gha,mode=max,scope=frontend-build-${{ github.ref_name }} # Pushes built layers to GitHub Actions cache, mode=max caches as many layers as possible
